package eth_test

import (
	"math/big"
	"net/http"
	"testing"

	"github.com/KyberNetwork/tradinglib/pkg/eth"
	"github.com/stretchr/testify/require"
)

func TestTraceCall(t *testing.T) {
	t.Skip()

	nodeRPC := "...."

	traceClient := eth.NewTraceClient(http.DefaultClient, nodeRPC)

	resp, err := traceClient.DebugTraceCall(
		"0x8686301A430112D76FeF8331821aEf42c8c48686",
		"0x807cF9A772d5a3f9CeFBc1192e939D62f0D9bD38",
		407047,
		nil,
		big.NewInt(0),
		"0x7507bd7a000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000008800000000000000000000000008686301a430112d76fef8331821aef42c8c486860000000000000000000000006131b5fae19ea4f9d964eac0408e4408b66337b50000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000049c00000000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000000000764e21fd0e90000000000000000000000000000000000000000000000000000000000000020000000000000000000000000f081470f5c6fbccf48cc4e5b82dd926409dcdd67000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000004e000000000000000000000000000000000000000000000000000000000000007200000000000000000000000000000000000000000000000000000000000000420000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2000000000000000000000000807cf9a772d5a3f9cefbc1192e939d62f0d9bd38000000000000000000000000000000000000000000000000000000006644581a00000000000000000000000000000000000000000000000000000000000003e000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000180000000000000000000000000000000000000000000000000000000000000004063407a490000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000e0000000000000000000000000f081470f5c6fbccf48cc4e5b82dd926409dcdd67000000000000000000000000fe0df74636bc25c7f2400f22fe7dae32d39443d2000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb480000000000000000000000006123b0049f904d730db3c36a31167d9d4121fa6b00000000000000000000000000000000000000000000000000000000b2c059df00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000004063407a490000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000e0000000000000000000000000f081470f5c6fbccf48cc4e5b82dd926409dcdd6700000000000000000000000094981f69f7483af3ae218cbfe65233cc3c60d93a0000000000000000000000006123b0049f904d730db3c36a31167d9d4121fa6b000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756cc20000000000000000000000000000000000000000000000a4cc6f4162480b7c24000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2000000000000000000000000000000000000000000000000000000000000016000000000000000000000000000000000000000000000000000000000000001a000000000000000000000000000000000000000000000000000000000000001e00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000807cf9a772d5a3f9cefbc1192e939d62f0d9bd3800000000000000000000000000000000000000000000000000000000b2c059df0000000000000000000000000000000000000000000000000e6b8af58ea04f8f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002200000000000000000000000000000000000000000000000000000000000000001000000000000000000000000f081470f5c6fbccf48cc4e5b82dd926409dcdd67000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000b2c059df0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000041a19520ccf6ebf03bdf1c42fade9aa702ef33dc9a842da9e1489eebbd22de1e295e4138d1778b6166f612de774b947d53466c8c89601d37df95eb20744f7fc7651b00000000000000000000000000000000000000000000000000000000000000", // nolint: lll
		nil,
	)
	require.NoError(t, err)

	t.Logf("%+v", resp)
}
